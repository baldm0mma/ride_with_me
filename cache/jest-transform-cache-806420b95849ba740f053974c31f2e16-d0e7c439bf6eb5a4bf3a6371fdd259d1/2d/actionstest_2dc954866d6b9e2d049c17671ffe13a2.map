{"version":3,"sources":["actions.test.js"],"names":["describe","it","profileData","name","upcomingRides","expectedAction","type","result","actions","setProfileData","expect","toEqual","rideData","setRideData","bool","toggleLogin","num","toggleCurrentFriend","toggleCurrentRide"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,SAAD,EAAY,YAAM;AACtBC,EAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAM;AAC/C,QAAMC,WAAW,GAAG;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,aAAa,EAAE;AAA9B,KAApB;AAEA,QAAMC,cAAc,GAAG;AACnBC,MAAAA,IAAI,EAAE,kBADa;AAEnBJ,MAAAA,WAAW,EAAXA;AAFmB,KAAvB;AAKA,QAAMK,MAAM,GAAGC,OAAO,CAACC,cAAR,CAAuBP,WAAvB,CAAf;AAEAQ,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,OAAf,CAAuBN,cAAvB;AACH,GAXC,CAAF;AAaAJ,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC5C,QAAMW,QAAQ,GAAG,EAAjB;AAEA,QAAMP,cAAc,GAAG;AACnBC,MAAAA,IAAI,EAAE,eADa;AAEnBM,MAAAA,QAAQ,EAARA;AAFmB,KAAvB;AAKA,QAAML,MAAM,GAAGC,OAAO,CAACK,WAAR,CAAoBD,QAApB,CAAf;AAEAF,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,OAAf,CAAuBN,cAAvB;AACH,GAXC,CAAF;AAaAJ,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC3C,QAAMa,IAAI,GAAG,CAACA,IAAd;AAEA,QAAMT,cAAc,GAAG;AACnBC,MAAAA,IAAI,EAAE,cADa;AAEnBQ,MAAAA,IAAI,EAAJA;AAFmB,KAAvB;AAKA,QAAMP,MAAM,GAAGC,OAAO,CAACO,WAAR,CAAoBD,IAApB,CAAf;AACAJ,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,OAAf,CAAuBN,cAAvB;AACH,GAVC,CAAF;AAYAJ,EAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpD,QAAMe,GAAG,GAAG,CAAZ;AAEA,QAAMX,cAAc,GAAG;AACnBC,MAAAA,IAAI,EAAE,uBADa;AAEnBU,MAAAA,GAAG,EAAHA;AAFmB,KAAvB;AAKA,QAAMT,MAAM,GAAGC,OAAO,CAACS,mBAAR,CAA4BD,GAA5B,CAAf;AACAN,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,OAAf,CAAuBN,cAAvB;AACH,GAVC,CAAF;AAYAJ,EAAAA,EAAE,CAAC,2CAAD,EAA8C,YAAM;AAClD,QAAMe,GAAG,GAAG,CAAZ;AAEA,QAAMX,cAAc,GAAG;AACnBC,MAAAA,IAAI,EAAE,qBADa;AAEnBU,MAAAA,GAAG,EAAHA;AAFmB,KAAvB;AAKA,QAAMT,MAAM,GAAGC,OAAO,CAACU,iBAAR,CAA0BF,GAA1B,CAAf;AACAN,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,OAAf,CAAuBN,cAAvB;AACH,GAVC,CAAF;AAWH,CA9DO,CAAR","sourcesContent":["import * as actions from '../actions/index'\n\ndescribe('actions', () => {\n    it('should have a type of SET_PROFILE_DATA', () => {\n        const profileData = { name: 'Jev', upcomingRides: 3}\n\n        const expectedAction = {\n            type: 'SET_PROFILE_DATA',\n            profileData\n        }\n\n        const result = actions.setProfileData(profileData)\n\n        expect(result).toEqual(expectedAction)\n    });\n\n    it('should have a type of SET_RIDE_DATA', () => {\n        const rideData = {}\n\n        const expectedAction = {\n            type: 'SET_RIDE_DATA',\n            rideData\n        }\n\n        const result = actions.setRideData(rideData)\n\n        expect(result).toEqual(expectedAction)\n    });\n\n    it('should have a type of TOGGLE_LOGIN', () => {\n        const bool = !bool;\n\n        const expectedAction = {\n            type: 'TOGGLE_LOGIN',\n            bool\n        }\n\n        const result = actions.toggleLogin(bool)\n        expect(result).toEqual(expectedAction)\n    });\n\n    it('should have a type of TOGGLE_CURRENT_FRIEND', () => {\n        const num = 3;\n\n        const expectedAction = {\n            type: 'TOGGLE_CURRENT_FRIEND',\n            num\n        }\n\n        const result = actions.toggleCurrentFriend(num)\n        expect(result).toEqual(expectedAction)\n    });\n\n    it('should have a type of TOGGLE_CURRENT_RIDE', () => {\n        const num = 4;\n\n        const expectedAction = {\n            type: 'TOGGLE_CURRENT_RIDE',\n            num\n        }\n\n        const result = actions.toggleCurrentRide(num)\n        expect(result).toEqual(expectedAction)\n    })\n})"]}