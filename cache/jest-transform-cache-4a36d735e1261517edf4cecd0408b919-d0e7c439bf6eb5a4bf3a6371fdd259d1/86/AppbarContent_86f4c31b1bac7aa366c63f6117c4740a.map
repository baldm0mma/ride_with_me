{"version":3,"sources":["AppbarContent.js"],"names":["AppbarContent","props","color","titleColor","black","subtitle","subtitleStyle","onPress","style","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","styles","container","fontFamily","Platform","OS","regular","medium","React","Component","displayName","StyleSheet","create","flex","paddingHorizontal","fontSize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AAMA;;AAEA;;AAEA;;AACA;;IAuCMA,a;;;;;;;;;;6BAGK;AAAA,wBAWH,KAAKC,KAXF;AAAA,0CAELC,KAFK;AAAA,UAEEC,UAFF,kCAEeC,aAFf;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAILC,aAJK,eAILA,aAJK;AAAA,UAKLC,OALK,eAKLA,OALK;AAAA,UAMLC,KANK,eAMLA,KANK;AAAA,UAOLC,UAPK,eAOLA,UAPK;AAAA,UAQLC,KARK,eAQLA,KARK;AAAA,UASLC,KATK,eASLA,KATK;AAAA,UAUFC,IAVE;AAAA,UAYCC,KAZD,GAYWH,KAZX,CAYCG,KAZD;AAcP,UAAMC,aAAa,GAAG,oBAAMX,UAAN,EACnBY,KADmB,CACb,GADa,EAEnBC,GAFmB,GAGnBC,MAHmB,EAAtB;AAKA,aACE,oBAAC,qCAAD;AAA0B,QAAA,OAAO,EAAEV;AAAnC,SACE,oBAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,CAACW,MAAM,CAACC,SAAR,EAAmBX,KAAnB;AAAb,SAA4CI,IAA5C,GACE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAE,CACL;AACEV,UAAAA,KAAK,EAAEC,UADT;AAEEiB,UAAAA,UAAU,EACRC,sBAASC,EAAT,KAAgB,KAAhB,GAAwBT,KAAK,CAACU,OAA9B,GAAwCV,KAAK,CAACW;AAHlD,SADK,EAMLN,MAAM,CAACP,KANF,EAOLF,UAPK,CADT;AAUE,QAAA,aAAa,EAAE,CAVjB;AAWE,QAAA,mBAAmB,EAAC,QAXtB;AAYE,QAAA,iBAAiB,EACfY,sBAASC,EAAT,KAAgB,KAAhB,GAAyB,SAAzB,GAA2C;AAb/C,SAgBGX,KAhBH,CADF,EAmBGN,QAAQ,GACP,oBAAC,aAAD;AACE,QAAA,KAAK,EAAE,CAACa,MAAM,CAACb,QAAR,EAAkB;AAAEH,UAAAA,KAAK,EAAEY;AAAT,SAAlB,EAA4CR,aAA5C,CADT;AAEE,QAAA,aAAa,EAAE;AAFjB,SAIGD,QAJH,CADO,GAOL,IA1BN,CADF,CADF;AAgCD;;;EAtDyBoB,KAAK,CAACC,S;;AAA5B1B,a,CACG2B,W,GAAc,gB;;AAwDvB,IAAMT,MAAM,GAAGU,wBAAWC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,iBAAiB,EAAE;AAFV,GADoB;AAK/BpB,EAAAA,KAAK,EAAE;AACLqB,IAAAA,QAAQ,EAAEX,sBAASC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;AADlC,GALwB;AAQ/BjB,EAAAA,QAAQ,EAAE;AACR2B,IAAAA,QAAQ,EAAEX,sBAASC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;AAD/B;AARqB,CAAlB,CAAf;;eAae,wBAAUtB,aAAV,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { black } from '../../styles/colors';\n\nimport type { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {|\n  /**\n   * Custom color for the text.\n   */\n  color?: string,\n  /**\n   * Text for the title.\n   */\n  title: React.Node,\n  /**\n   * Style for the title.\n   */\n  titleStyle?: any,\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.Node,\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: any,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * A component used to display a title and optional subtitle in a appbar.\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = black,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor)\n      .alpha(0.7)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            style={[\n              {\n                color: titleColor,\n                fontFamily:\n                  Platform.OS === 'ios' ? fonts.regular : fonts.medium,\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessibilityTraits=\"header\"\n            accessibilityRole={\n              Platform.OS === 'web' ? ('heading': any) : 'header'\n            }\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n"]}