{"version":3,"sources":["ListSubheader.js"],"names":["ListSubheader","props","style","theme","rest","colors","fonts","fontFamily","medium","textColor","text","alpha","rgb","string","styles","container","color","React","Component","displayName","StyleSheet","create","paddingHorizontal","paddingVertical"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;IA+BMA,a;;;;;;;;;;6BAGK;AAAA,wBAC2B,KAAKC,KADhC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,KADR,eACQA,KADR;AAAA,UACkBC,IADlB;AAAA,UAECC,MAFD,GAEmBF,KAFnB,CAECE,MAFD;AAAA,UAESC,KAFT,GAEmBH,KAFnB,CAESG,KAFT;AAGP,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAzB;AACA,UAAMC,SAAS,GAAG,oBAAMJ,MAAM,CAACK,IAAb,EACfC,KADe,CACT,IADS,EAEfC,GAFe,GAGfC,MAHe,EAAlB;AAKA,aACE,oBAAC,aAAD;AACE,QAAA,aAAa,EAAE;AADjB,SAEMT,IAFN;AAGE,QAAA,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR,EAAmB;AAAEC,UAAAA,KAAK,EAAEP,SAAT;AAAoBF,UAAAA,UAAU,EAAVA;AAApB,SAAnB,EAAqDL,KAArD;AAHT,SADF;AAOD;;;EAnByBe,KAAK,CAACC,S;;AAA5BlB,a,CACGmB,W,GAAc,gB;;AAqBvB,IAAML,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,iBAAiB,EAAE,EADV;AAETC,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf;;eAOe,wBAAUvB,aAAV,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: Theme,\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: any,\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * class MyComponent extends React.Component {\n *  render () {\n *    return <List.Subheader>My List Title</List.Subheader>;\n *  }\n * }\n *\n * export default MyComponent;\n * ```\n */\nclass ListSubheader extends React.Component<Props> {\n  static displayName = 'List.Subheader';\n\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const fontFamily = fonts.medium;\n    const textColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n\n    return (\n      <Text\n        numberOfLines={1}\n        {...rest}\n        style={[styles.container, { color: textColor, fontFamily }, style]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]}