{"version":3,"sources":["DataTableRow.js"],"names":["DataTableRow","props","onPress","style","theme","rest","borderBottomColor","dark","white","black","alpha","rgb","string","styles","container","content","children","React","Component","displayName","StyleSheet","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;IAmBMA,Y;;;;;;;;;;6BAGK;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,KADV,eACUA,KADV;AAAA,UACiBC,KADjB,eACiBA,KADjB;AAAA,UAC2BC,IAD3B;AAEP,UAAMC,iBAAiB,GAAG,oBAAMF,KAAK,CAACG,IAAN,GAAaC,aAAb,GAAqBC,aAA3B,EACvBC,KADuB,CACjB,IADiB,EAEvBC,GAFuB,GAGvBC,MAHuB,EAA1B;AAKA,aACE,oBAAC,wBAAD,6BACMP,IADN;AAEE,QAAA,OAAO,EAAEH,OAFX;AAGE,QAAA,KAAK,EAAE,CAACW,MAAM,CAACC,SAAR,EAAmB;AAAER,UAAAA,iBAAiB,EAAjBA;AAAF,SAAnB,EAA0CH,KAA1C;AAHT,UAKE,oBAAC,iBAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACE;AAApB,SAA8B,KAAKd,KAAL,CAAWe,QAAzC,CALF,CADF;AASD;;;EAnBwBC,KAAK,CAACC,S;;AAA3BlB,Y,CACGmB,W,GAAc,e;;AAqBvB,IAAMN,MAAM,GAAGO,wBAAWC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,WAAW,EAAE,OADJ;AAETC,IAAAA,iBAAiB,EAAEH,wBAAWI,aAFrB;AAGTC,IAAAA,SAAS,EAAE,EAHF;AAITC,IAAAA,iBAAiB,EAAE;AAJV,GADoB;AAO/BX,EAAAA,OAAO,EAAE;AACPY,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE;AAFR;AAPsB,CAAlB,CAAf;;eAae,wBAAU5B,YAAV,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {|\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.Node,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n"]}