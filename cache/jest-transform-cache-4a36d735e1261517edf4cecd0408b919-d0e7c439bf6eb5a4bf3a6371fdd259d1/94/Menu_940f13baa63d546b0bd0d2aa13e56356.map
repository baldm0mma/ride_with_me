{"version":3,"sources":["Menu.js"],"names":["SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","bezier","Menu","state","rendered","props","visible","top","left","windowLayout","width","height","menuLayout","anchorLayout","opacityAnimation","Animated","Value","scaleAnimation","ValueXY","x","y","_anchor","_menu","_measureMenuLayout","Promise","resolve","measureInWindow","_measureAnchorLayout","_updateVisibility","_show","_hide","_isBrowser","global","_focusFirstDOMNode","el","node","focusableNode","querySelector","focus","_handleDismiss","onDismiss","_handleKeypress","e","key","_attachListeners","BackHandler","addEventListener","Dimensions","document","_removeListeners","removeEventListener","get","all","setTimeout","setState","parallel","timing","toValue","duration","easing","useNativeDriver","start","finished","setValue","prevProps","anchor","style","children","theme","statusBarHeight","additionalVerticalValue","Platform","select","android","default","scaleTransforms","scaleX","interpolate","inputRange","outputRange","scaleY","positionTransforms","push","translateX","right","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","roundness","positionStyle","I18nManager","isRTL","ref","StyleSheet","absoluteFill","styles","wrapper","shadowMenuContainer","nextProps","prevState","React","Component","Item","MenuItem","defaultProps","APPROX_STATUSBAR_HEIGHT","create","position","paddingVertical","elevation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AAYA;;AAEA;;AACA;;AACA;;AACA;;;;;;AA6CA,IAAMA,aAAa,GAAG,CAAtB;AAEA,IAAMC,kBAAkB,GAAG,GAA3B;;AAEA,IAAMC,MAAM,GAAGC,oBAAOC,MAAP,CAAc,GAAd,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAAf;;IAqDMC,I;;;;;;;;;;;;;;;UAgBJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWC,OADf;AAENC,MAAAA,GAAG,EAAE,CAFC;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,YAAY,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAJR;AAKNC,MAAAA,UAAU,EAAE;AAAEF,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OALN;AAMNE,MAAAA,YAAY,EAAE;AAAEH,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OANR;AAONG,MAAAA,gBAAgB,EAAE,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAPZ;AAQNC,MAAAA,cAAc,EAAE,IAAIF,sBAASG,OAAb,CAAqB;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAArB;AARV,K;UAqBRC,O,GAAuB,I;UACvBC,K,GAAqB,I;;UAErBC,kB,GAAqB;AAAA,aACnB,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrB,YAAI,MAAKH,KAAT,EAAgB;AACd,gBAAKA,KAAL,CAAWI,eAAX,CAA2B,UAACP,CAAD,EAAIC,CAAJ,EAAOV,KAAP,EAAcC,MAAd,EAAyB;AAClDc,YAAAA,OAAO,CAAC;AAAEN,cAAAA,CAAC,EAADA,CAAF;AAAKC,cAAAA,CAAC,EAADA,CAAL;AAAQV,cAAAA,KAAK,EAALA,KAAR;AAAeC,cAAAA,MAAM,EAANA;AAAf,aAAD,CAAP;AACD,WAFD;AAGD;AACF,OAND,CADmB;AAAA,K;;UASrBgB,oB,GAAuB;AAAA,aACrB,IAAIH,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrB,YAAI,MAAKJ,OAAT,EAAkB;AAChB,gBAAKA,OAAL,CAAaK,eAAb,CAA6B,UAACP,CAAD,EAAIC,CAAJ,EAAOV,KAAP,EAAcC,MAAd,EAAyB;AACpDc,YAAAA,OAAO,CAAC;AAAEN,cAAAA,CAAC,EAADA,CAAF;AAAKC,cAAAA,CAAC,EAADA,CAAL;AAAQV,cAAAA,KAAK,EAALA,KAAR;AAAeC,cAAAA,MAAM,EAANA;AAAf,aAAD,CAAP;AACD,WAFD;AAGD;AACF,OAND,CADqB;AAAA,K;;UASvBiB,iB,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAGZJ,OAAO,CAACC,OAAR,EAHY;;AAAA;AAKlB,kBAAI,MAAKpB,KAAL,CAAWC,OAAf,EAAwB;AACtB,sBAAKuB,KAAL;AACD,eAFD,MAEO;AACL,sBAAKC,KAAL;AACD;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAYpBC,U,GAAa;AAAA,aAAM,cAAcC,MAApB;AAAA,K;;UAEbC,kB,GAAqB,UAACC,EAAD,EAAqB;AACxC,UAAIA,EAAE,IAAI,MAAKH,UAAL,EAAV,EAA6B;AAI3B,YAAMI,IAAS,GAAG,iCAAeD,EAAf,CAAlB;AACA,YAAME,aAAa,GAAGD,IAAI,CAACE,aAAL,CAEpB,0EAFoB,CAAtB;AAKAD,QAAAA,aAAa,IAAIA,aAAa,CAACE,KAAd,EAAjB;AACD;AACF,K;;UAEDC,c,GAAiB,YAAM;AACrB,UAAI,MAAKlC,KAAL,CAAWC,OAAf,EAAwB;AACtB,cAAKD,KAAL,CAAWmC,SAAX;AACD;;AACD,aAAO,IAAP;AACD,K;;UAEDC,e,GAAkB,UAACC,CAAD,EAAsB;AACtC,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtB,cAAKtC,KAAL,CAAWmC,SAAX;AACD;AACF,K;;UAEDI,gB,GAAmB,YAAM;AACvBC,+BAAYC,gBAAZ,CAA6B,mBAA7B,EAAkD,MAAKP,cAAvD;;AACAQ,8BAAWD,gBAAX,CAA4B,QAA5B,EAAsC,MAAKP,cAA3C;;AAEA,YAAKR,UAAL,MACEiB,QAAQ,CAACF,gBAAT,CAA0B,OAA1B,EAAmC,MAAKL,eAAxC,CADF;AAED,K;;UAEDQ,gB,GAAmB,YAAM;AACvBJ,+BAAYK,mBAAZ,CAAgC,mBAAhC,EAAqD,MAAKX,cAA1D;;AACAQ,8BAAWG,mBAAX,CAA+B,QAA/B,EAAyC,MAAKX,cAA9C;;AAEA,YAAKR,UAAL,MACEiB,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,MAAKT,eAA3C,CADF;AAED,K;;UAEDZ,K,GAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACApB,cAAAA,YADA,GACesC,wBAAWI,GAAX,CAAe,QAAf,CADf;AAAA;AAAA,gDAEmC3B,OAAO,CAAC4B,GAAR,CAAY,CACnD,MAAK7B,kBAAL,EADmD,EAEnD,MAAKI,oBAAL,EAFmD,CAAZ,CAFnC;;AAAA;AAAA;AAAA;AAECf,cAAAA,UAFD;AAEaC,cAAAA,YAFb;;AAAA,oBAcJ,CAACJ,YAAY,CAACC,KAAd,IACA,CAACD,YAAY,CAACE,MADd,IAEA,CAACC,UAAU,CAACF,KAFZ,IAGA,CAACE,UAAU,CAACD,MAHZ,IAIA,CAACE,YAAY,CAACH,KAJd,IAKA,CAACG,YAAY,CAACF,MAnBV;AAAA;AAAA;AAAA;;AAqBJ0C,cAAAA,UAAU,CAAC,MAAKxB,KAAN,EAAa/B,kBAAb,CAAV;AArBI;;AAAA;AAyBN,oBAAKwD,QAAL,CACE;AACE9C,gBAAAA,IAAI,EAAEK,YAAY,CAACM,CADrB;AAEEZ,gBAAAA,GAAG,EAAEM,YAAY,CAACO,CAFpB;AAGEX,gBAAAA,YAAY,EAAE;AACZE,kBAAAA,MAAM,EAAEF,YAAY,CAACE,MADT;AAEZD,kBAAAA,KAAK,EAAED,YAAY,CAACC;AAFR,iBAHhB;AAOEG,gBAAAA,YAAY,EAAE;AACZF,kBAAAA,MAAM,EAAEE,YAAY,CAACF,MADT;AAEZD,kBAAAA,KAAK,EAAEG,YAAY,CAACH;AAFR,iBAPhB;AAWEE,gBAAAA,UAAU,EAAE;AACVF,kBAAAA,KAAK,EAAEE,UAAU,CAACF,KADR;AAEVC,kBAAAA,MAAM,EAAEC,UAAU,CAACD;AAFT;AAXd,eADF,EAiBE,YAAM;AACJ,sBAAKiC,gBAAL;;AAEA7B,sCAASwC,QAAT,CAAkB,CAChBxC,sBAASyC,MAAT,CAAgB,MAAKrD,KAAL,CAAWc,cAA3B,EAA2C;AACzCwC,kBAAAA,OAAO,EAAE;AAAEtC,oBAAAA,CAAC,EAAEP,UAAU,CAACF,KAAhB;AAAuBU,oBAAAA,CAAC,EAAER,UAAU,CAACD;AAArC,mBADgC;AAEzC+C,kBAAAA,QAAQ,EAAE5D,kBAF+B;AAGzC6D,kBAAAA,MAAM,EAAE5D,MAHiC;AAIzC6D,kBAAAA,eAAe,EAAE;AAJwB,iBAA3C,CADgB,EAOhB7C,sBAASyC,MAAT,CAAgB,MAAKrD,KAAL,CAAWW,gBAA3B,EAA6C;AAC3C2C,kBAAAA,OAAO,EAAE,CADkC;AAE3CC,kBAAAA,QAAQ,EAAE5D,kBAFiC;AAG3C6D,kBAAAA,MAAM,EAAE5D,MAHmC;AAI3C6D,kBAAAA,eAAe,EAAE;AAJ0B,iBAA7C,CAPgB,CAAlB,EAaGC,KAbH,CAaS,iBAAkB;AAAA,sBAAfC,QAAe,SAAfA,QAAe;;AACzB,sBAAIA,QAAJ,EAAc;AACZ,0BAAK7B,kBAAL,CAAwB,MAAKX,KAA7B;AACD;AACF,iBAjBD;AAkBD,eAtCH;;AAzBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAmERQ,K,GAAQ,YAAM;AACZ,YAAKmB,gBAAL;;AAEAlC,4BAASyC,MAAT,CAAgB,MAAKrD,KAAL,CAAWW,gBAA3B,EAA6C;AAC3C2C,QAAAA,OAAO,EAAE,CADkC;AAE3CC,QAAAA,QAAQ,EAAE5D,kBAFiC;AAG3C6D,QAAAA,MAAM,EAAE5D,MAHmC;AAI3C6D,QAAAA,eAAe,EAAE;AAJ0B,OAA7C,EAKGC,KALH,CAKS,UAAAC,QAAQ,EAAI;AACnB,YAAIA,QAAJ,EAAc;AACZ,gBAAK7B,kBAAL,CAAwB,MAAKZ,OAA7B;;AAEA,gBAAKlB,KAAL,CAAWc,cAAX,CAA0B8C,QAA1B,CAAmC;AAAE5C,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX,WAAnC;;AACA,gBAAKkC,QAAL,CAAc;AAAElD,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACD;AACF,OAZD;AAaD,K;;;;;;;uCA5KkB4D,S,EAAW;AAC5B,UAAIA,SAAS,CAAC1D,OAAV,KAAsB,KAAKD,KAAL,CAAWC,OAArC,EAA8C;AAC5C,aAAKsB,iBAAL;AACD;AACF;;;2CAEsB;AACrB,WAAKqB,gBAAL;AACD;;;6BAsKQ;AAAA;;AAAA,wBASH,KAAK5C,KATF;AAAA,UAELC,OAFK,eAELA,OAFK;AAAA,UAGL2D,MAHK,eAGLA,MAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,KANK,eAMLA,KANK;AAAA,UAOLC,eAPK,eAOLA,eAPK;AAAA,UAQL7B,SARK,eAQLA,SARK;AAAA,wBAkBH,KAAKrC,KAlBF;AAAA,UAYLC,QAZK,eAYLA,QAZK;AAAA,UAaLK,YAbK,eAaLA,YAbK;AAAA,UAcLG,UAdK,eAcLA,UAdK;AAAA,UAeLC,YAfK,eAeLA,YAfK;AAAA,UAgBLC,gBAhBK,eAgBLA,gBAhBK;AAAA,UAiBLG,cAjBK,eAiBLA,cAjBK;;AAqBP,UAAMqD,uBAAuB,GAAGC,sBAASC,MAAT,CAAgB;AAC9CC,QAAAA,OAAO,EAAEJ,eADqC;AAE9CK,QAAAA,OAAO,EAAE;AAFqC,OAAhB,CAAhC;;AArBO,yBA0Ba,KAAKvE,KA1BlB;AAAA,UA0BDK,IA1BC,gBA0BDA,IA1BC;AAAA,UA0BKD,GA1BL,gBA0BKA,GA1BL;AA4BP,UAAMoE,eAAe,GAAG,CACtB;AACEC,QAAAA,MAAM,EAAE3D,cAAc,CAACE,CAAf,CAAiB0D,WAAjB,CAA6B;AACnCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAIlE,UAAU,CAACF,KAAf,CADuB;AAEnCqE,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFsB,SAA7B;AADV,OADsB,EAOtB;AACEC,QAAAA,MAAM,EAAE/D,cAAc,CAACG,CAAf,CAAiByD,WAAjB,CAA6B;AACnCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAIlE,UAAU,CAACD,MAAf,CADuB;AAEnCoE,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFsB,SAA7B;AADV,OAPsB,CAAxB;AAgBA,UAAME,kBAAkB,GAAG,EAA3B;;AAGA,UAAIzE,IAAI,IAAIC,YAAY,CAACC,KAAb,GAAqBE,UAAU,CAACF,KAAhC,GAAwCb,aAApD,EAAmE;AACjEoF,QAAAA,kBAAkB,CAACC,IAAnB,CAAwB;AACtBC,UAAAA,UAAU,EAAElE,cAAc,CAACE,CAAf,CAAiB0D,WAAjB,CAA6B;AACvCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAIlE,UAAU,CAACF,KAAf,CAD2B;AAEvCqE,YAAAA,WAAW,EAAE,CAAC,EAAEnE,UAAU,CAACF,KAAX,GAAmB,CAArB,CAAD,EAA0B,CAA1B;AAF0B,WAA7B;AADU,SAAxB;;AAQA,YAAIF,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAGX,aAAxB,EAAuC;AACrCW,UAAAA,IAAI,GAAGX,aAAP;AACD;AACF,OAZD,MAYO;AACLoF,QAAAA,kBAAkB,CAACC,IAAnB,CAAwB;AACtBC,UAAAA,UAAU,EAAElE,cAAc,CAACE,CAAf,CAAiB0D,WAAjB,CAA6B;AACvCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAIlE,UAAU,CAACF,KAAf,CAD2B;AAEvCqE,YAAAA,WAAW,EAAE,CAACnE,UAAU,CAACF,KAAX,GAAmB,CAApB,EAAuB,CAAvB;AAF0B,WAA7B;AADU,SAAxB;AAOAF,QAAAA,IAAI,IAAIK,YAAY,CAACH,KAAb,GAAqBE,UAAU,CAACF,KAAxC;AAEA,YAAM0E,KAAK,GAAG5E,IAAI,GAAGI,UAAU,CAACF,KAAhC;;AAEA,YACE0E,KAAK,IAAI3E,YAAY,CAACC,KAAtB,IACA0E,KAAK,GAAG3E,YAAY,CAACC,KAAb,GAAqBb,aAF/B,EAGE;AACAW,UAAAA,IAAI,GAAGC,YAAY,CAACC,KAAb,GAAqBb,aAArB,GAAqCe,UAAU,CAACF,KAAvD;AACD;AACF;;AAGD,UAAIH,GAAG,IAAIE,YAAY,CAACE,MAAb,GAAsBC,UAAU,CAACD,MAAjC,GAA0Cd,aAArD,EAAoE;AAClEoF,QAAAA,kBAAkB,CAACC,IAAnB,CAAwB;AACtBG,UAAAA,UAAU,EAAEpE,cAAc,CAACG,CAAf,CAAiByD,WAAjB,CAA6B;AACvCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAIlE,UAAU,CAACD,MAAf,CAD2B;AAEvCoE,YAAAA,WAAW,EAAE,CAAC,EAAEnE,UAAU,CAACD,MAAX,GAAoB,CAAtB,CAAD,EAA2B,CAA3B;AAF0B,WAA7B;AADU,SAAxB;;AAQA,YAAIJ,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAGV,aAAtB,EAAqC;AACnCU,UAAAA,GAAG,GAAGV,aAAN;AACD;AACF,OAZD,MAYO;AACLoF,QAAAA,kBAAkB,CAACC,IAAnB,CAAwB;AACtBG,UAAAA,UAAU,EAAEpE,cAAc,CAACG,CAAf,CAAiByD,WAAjB,CAA6B;AACvCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAIlE,UAAU,CAACD,MAAf,CAD2B;AAEvCoE,YAAAA,WAAW,EAAE,CAACnE,UAAU,CAACD,MAAX,GAAoB,CAArB,EAAwB,CAAxB;AAF0B,WAA7B;AADU,SAAxB;AAOAJ,QAAAA,GAAG,IAAIM,YAAY,CAACF,MAAb,GAAsBC,UAAU,CAACD,MAAxC;AAEA,YAAM2E,MAAM,GAAG/E,GAAG,GAAGK,UAAU,CAACD,MAAjB,GAA0B2D,uBAAzC;;AAEA,YACEgB,MAAM,IAAI7E,YAAY,CAACE,MAAvB,IACA2E,MAAM,GAAG7E,YAAY,CAACE,MAAb,GAAsBd,aAFjC,EAGE;AACAU,UAAAA,GAAG,GACDE,YAAY,CAACE,MAAb,GACAd,aADA,GAEAe,UAAU,CAACD,MAFX,GAGA2D,uBAJF;AAKD;AACF;;AAED,UAAMiB,wBAAwB,GAAG;AAC/BC,QAAAA,OAAO,EAAE1E,gBADsB;AAE/B2E,QAAAA,SAAS,EAAEd,eAFoB;AAG/Be,QAAAA,YAAY,EAAEtB,KAAK,CAACuB;AAHW,OAAjC;;AAMA,UAAMC,aAAa;AACjBrF,QAAAA,GAAG,EAAEA,GAAG,GAAG+D;AADM,SAEbuB,yBAAYC,KAAZ,GAAoB;AAAEV,QAAAA,KAAK,EAAE5E;AAAT,OAApB,GAAsC;AAAEA,QAAAA,IAAI,EAAJA;AAAF,OAFzB,CAAnB;;AAKA,aACE,oBAAC,iBAAD;AACE,QAAA,GAAG,EAAE,aAAAuF,KAAG,EAAI;AACV,UAAA,MAAI,CAAC1E,OAAL,GAAe0E,KAAf;AACD,SAHH;AAIE,QAAA,WAAW,EAAE;AAJf,SAMG9B,MANH,EAOG7D,QAAQ,GACP,oBAAC,eAAD,QACE,oBAAC,qCAAD;AAA0B,QAAA,OAAO,EAAEoC;AAAnC,SACE,oBAAC,iBAAD;AAAM,QAAA,KAAK,EAAEwD,wBAAWC;AAAxB,QADF,CADF,EAIE,oBAAC,iBAAD;AACE,QAAA,GAAG,EAAE,aAAAF,KAAG,EAAI;AACV,UAAA,MAAI,CAACzE,KAAL,GAAayE,KAAb;AACD,SAHH;AAIE,QAAA,WAAW,EAAE,KAJf;AAKE,QAAA,wBAAwB,EAAEzF,OAL5B;AAME,QAAA,KAAK,EAAE,CAAC4F,MAAM,CAACC,OAAR,EAAiBP,aAAjB,EAAgC1B,KAAhC;AANT,SAQE,oBAAC,qBAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE;AAAEuB,UAAAA,SAAS,EAAER;AAAb;AAAtB,SACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE,CAACiB,MAAM,CAACE,mBAAR,EAA6Bb,wBAA7B;AADT,SAGGpB,QAHH,CADF,CARF,CAJF,CADO,GAsBL,IA7BN,CADF;AAiCD;;;6CAjW+BkC,S,EAAWC,S,EAAW;AACpD,UAAID,SAAS,CAAC/F,OAAV,IAAqB,CAACgG,SAAS,CAAClG,QAApC,EAA8C;AAC5C,eAAO;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAP;AACD;;AAED,aAAO,IAAP;AACD;;;EAdgBmG,KAAK,CAACC,S;;AAAnBtG,I,CAEGuG,I,GAAOC,iB;AAFVxG,I,CAIGyG,Y,GAAe;AACpBtC,EAAAA,eAAe,EAAEuC;AADG,C;;AAwWxB,IAAMV,MAAM,GAAGF,wBAAWa,MAAX,CAAkB;AAC/BV,EAAAA,OAAO,EAAE;AACPW,IAAAA,QAAQ,EAAE;AADH,GADsB;AAI/BV,EAAAA,mBAAmB,EAAE;AACnBZ,IAAAA,OAAO,EAAE,CADU;AAEnBuB,IAAAA,eAAe,EAAE,CAFE;AAGnBC,IAAAA,SAAS,EAAE;AAHQ;AAJU,CAAlB,CAAf;;eAWe,wBAAU9G,IAAV,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  StyleSheet,\n  Animated,\n  View,\n  Easing,\n  Dimensions,\n  TouchableWithoutFeedback,\n  I18nManager,\n  BackHandler,\n  Platform,\n  findNodeHandle,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\nimport MenuItem from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean,\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the manu.\n   */\n  anchor: React.Node,\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight: number,\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => mixed,\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.Node,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n};\n\ntype State = {|\n  rendered: boolean,\n  top: number,\n  left: number,\n  windowLayout: {| height: number, width: number |},\n  menuLayout: {| height: number, width: number |},\n  anchorLayout: {| height: number, width: number |},\n  opacityAnimation: Animated.Value,\n  scaleAnimation: Animated.ValueXY,\n|};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _openMenu = () => this.setState({ visible: true });\n *\n *   _closeMenu = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Provider>\n *         <View\n *           style={{\n *             paddingTop: 50,\n *             flexDirection: 'row',\n *             justifyContent: 'center'\n *           }}>\n *           <Menu\n *             visible={this.state.visible}\n *             onDismiss={this._closeMenu}\n *             anchor={\n *               <Button onPress={this._openMenu}>Show menu</Button>\n *             }\n *           >\n *             <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *             <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *             <Divider />\n *             <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *           </Menu>\n *         </View>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.js\n  static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    windowLayout: { width: 0, height: 0 },\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.visible !== this.props.visible) {\n      this._updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this._removeListeners();\n  }\n\n  _anchor: View | null = null;\n  _menu: View | null = null;\n\n  _measureMenuLayout = () =>\n    new Promise(resolve => {\n      if (this._menu) {\n        this._menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  _measureAnchorLayout = () =>\n    new Promise(resolve => {\n      if (this._anchor) {\n        this._anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  _updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this._show();\n    } else {\n      this._hide();\n    }\n  };\n\n  _isBrowser = () => 'document' in global;\n\n  _focusFirstDOMNode = (el: View | null) => {\n    if (el && this._isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      focusableNode && focusableNode.focus();\n    }\n  };\n\n  _handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss();\n    }\n    return true;\n  };\n\n  _handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss();\n    }\n  };\n\n  _attachListeners = () => {\n    BackHandler.addEventListener('hardwareBackPress', this._handleDismiss);\n    Dimensions.addEventListener('change', this._handleDismiss);\n\n    this._isBrowser() &&\n      document.addEventListener('keyup', this._handleKeypress);\n  };\n\n  _removeListeners = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this._handleDismiss);\n    Dimensions.removeEventListener('change', this._handleDismiss);\n\n    this._isBrowser() &&\n      document.removeEventListener('keyup', this._handleKeypress);\n  };\n\n  _show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this._measureMenuLayout(),\n      this._measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      !anchorLayout.width ||\n      !anchorLayout.height\n    ) {\n      setTimeout(this._show, ANIMATION_DURATION);\n      return;\n    }\n\n    this.setState(\n      {\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        windowLayout: {\n          height: windowLayout.height,\n          width: windowLayout.width,\n        },\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      },\n      () => {\n        this._attachListeners();\n\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this._focusFirstDOMNode(this._menu);\n          }\n        });\n      }\n    );\n  };\n\n  _hide = () => {\n    this._removeListeners();\n\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(finished => {\n      if (finished) {\n        this._focusFirstDOMNode(this._anchor);\n\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this.setState({ rendered: false });\n      }\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      anchor,\n      style,\n      children,\n      theme,\n      statusBarHeight,\n      onDismiss,\n    } = this.props;\n\n    const {\n      rendered,\n      windowLayout,\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n    } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    let { left, top } = this.state;\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left >= 0 && left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (\n        right <= windowLayout.width &&\n        right > windowLayout.width - SCREEN_INDENT\n      ) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // Check if menu fits vertically and if not align it to bottom.\n    if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-(menuLayout.height / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top >= 0 && top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [menuLayout.height / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - menuLayout.height;\n\n      const bottom = top + menuLayout.height + additionalVerticalValue;\n      // Check if menu position has enough space from bottom side\n      if (\n        bottom <= windowLayout.height &&\n        bottom > windowLayout.height - SCREEN_INDENT\n      ) {\n        top =\n          windowLayout.height -\n          SCREEN_INDENT -\n          menuLayout.height -\n          additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n    };\n\n    const positionStyle = {\n      top: top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n\n    return (\n      <View\n        ref={ref => {\n          this._anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {anchor}\n        {rendered ? (\n          <Portal>\n            <TouchableWithoutFeedback onPress={onDismiss}>\n              <View style={StyleSheet.absoluteFill} />\n            </TouchableWithoutFeedback>\n            <View\n              ref={ref => {\n                this._menu = ref;\n              }}\n              collapsable={false}\n              accessibilityViewIsModal={visible}\n              style={[styles.wrapper, positionStyle, style]}\n            >\n              <Animated.View style={{ transform: positionTransforms }}>\n                <Surface\n                  style={[styles.shadowMenuContainer, shadowMenuContainerStyle]}\n                >\n                  {children}\n                </Surface>\n              </Animated.View>\n            </View>\n          </Portal>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8,\n  },\n});\n\nexport default withTheme(Menu);\n"]}