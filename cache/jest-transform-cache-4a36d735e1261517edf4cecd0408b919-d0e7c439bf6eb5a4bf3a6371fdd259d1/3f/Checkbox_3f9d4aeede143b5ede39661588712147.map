{"version":3,"sources":["Checkbox.js"],"names":["Checkbox","Platform","OS","props","React","Component","Android","CheckboxAndroid","IOS","CheckboxIOS"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;IA0EMA,Q;;;;;;;;;;6BAOK;AACP,aAAOC,sBAASC,EAAT,KAAgB,KAAhB,GACL,oBAAC,oBAAD,EAAiB,KAAKC,KAAtB,CADK,GAGL,oBAAC,wBAAD,EAAqB,KAAKA,KAA1B,CAHF;AAKD;;;EAboBC,KAAK,CAACC,S;;AAAvBL,Q,CAEGM,O,GAAUC,wB;AAFbP,Q,CAKGQ,G,GAAMC,oB;;eAWA,wBAAUT,QAAV,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types';\n\ntype Props = {|\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate',\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string,\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: false,\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *     return (\n *       <Checkbox\n *         status={checked ? 'checked' : 'unchecked'}\n *         onPress={() => { this.setState({ checked: !checked }); }}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxAndroid.js\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.js\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]}