bfb01de60ee9179b1c8f8a9fb8906685
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _DataTableCell = _interopRequireDefault(require("./DataTableCell"));

var _DataTableHeader = _interopRequireDefault(require("./DataTableHeader"));

var _DataTableTitle = _interopRequireDefault(require("./DataTableTitle"));

var _DataTablePagination = _interopRequireDefault(require("./DataTablePagination"));

var _DataTableRow = _interopRequireDefault(require("./DataTableRow"));

var DataTable = function (_React$Component) {
  (0, _inherits2.default)(DataTable, _React$Component);

  function DataTable() {
    (0, _classCallCheck2.default)(this, DataTable);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DataTable).apply(this, arguments));
  }

  (0, _createClass2.default)(DataTable, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          style = _this$props.style,
          rest = (0, _objectWithoutProperties2.default)(_this$props, ["children", "style"]);
      return React.createElement(_reactNative.View, (0, _extends2.default)({}, rest, {
        style: [styles.container, style]
      }), children);
    }
  }]);
  return DataTable;
}(React.Component);

DataTable.Header = _DataTableHeader.default;
DataTable.Title = _DataTableTitle.default;
DataTable.Row = _DataTableRow.default;
DataTable.Cell = _DataTableCell.default;
DataTable.Pagination = _DataTablePagination.default;

var styles = _reactNative.StyleSheet.create({
  container: {
    width: '100%'
  }
});

var _default = DataTable;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGFUYWJsZS5qcyJdLCJuYW1lcyI6WyJEYXRhVGFibGUiLCJwcm9wcyIsImNoaWxkcmVuIiwic3R5bGUiLCJyZXN0Iiwic3R5bGVzIiwiY29udGFpbmVyIiwiUmVhY3QiLCJDb21wb25lbnQiLCJIZWFkZXIiLCJEYXRhVGFibGVIZWFkZXIiLCJUaXRsZSIsIkRhdGFUYWJsZVRpdGxlIiwiUm93IiwiRGF0YVRhYmxlUm93IiwiQ2VsbCIsIkRhdGFUYWJsZUNlbGwiLCJQYWdpbmF0aW9uIiwiRGF0YVRhYmxlUGFnaW5hdGlvbiIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJ3aWR0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7SUEyRE1BLFM7Ozs7Ozs7Ozs7NkJBZ0JLO0FBQUEsd0JBQzhCLEtBQUtDLEtBRG5DO0FBQUEsVUFDQ0MsUUFERCxlQUNDQSxRQUREO0FBQUEsVUFDV0MsS0FEWCxlQUNXQSxLQURYO0FBQUEsVUFDcUJDLElBRHJCO0FBR1AsYUFDRSxvQkFBQyxpQkFBRCw2QkFBVUEsSUFBVjtBQUFnQixRQUFBLEtBQUssRUFBRSxDQUFDQyxNQUFNLENBQUNDLFNBQVIsRUFBbUJILEtBQW5CO0FBQXZCLFVBQ0dELFFBREgsQ0FERjtBQUtEOzs7RUF4QnFCSyxLQUFLLENBQUNDLFM7O0FBQXhCUixTLENBRUdTLE0sR0FBU0Msd0I7QUFGWlYsUyxDQUtHVyxLLEdBQVFDLHVCO0FBTFhaLFMsQ0FRR2EsRyxHQUFNQyxxQjtBQVJUZCxTLENBV0dlLEksR0FBT0Msc0I7QUFYVmhCLFMsQ0FjR2lCLFUsR0FBYUMsNEI7O0FBYXRCLElBQU1iLE1BQU0sR0FBR2Msd0JBQVdDLE1BQVgsQ0FBa0I7QUFDL0JkLEVBQUFBLFNBQVMsRUFBRTtBQUNUZSxJQUFBQSxLQUFLLEVBQUU7QUFERTtBQURvQixDQUFsQixDQUFmOztlQU1lckIsUyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IERhdGFUYWJsZUNlbGwgZnJvbSAnLi9EYXRhVGFibGVDZWxsJztcbmltcG9ydCBEYXRhVGFibGVIZWFkZXIgZnJvbSAnLi9EYXRhVGFibGVIZWFkZXInO1xuaW1wb3J0IERhdGFUYWJsZVRpdGxlIGZyb20gJy4vRGF0YVRhYmxlVGl0bGUnO1xuaW1wb3J0IERhdGFUYWJsZVBhZ2luYXRpb24gZnJvbSAnLi9EYXRhVGFibGVQYWdpbmF0aW9uJztcbmltcG9ydCBEYXRhVGFibGVSb3cgZnJvbSAnLi9EYXRhVGFibGVSb3cnO1xuXG50eXBlIFByb3BzID0gUmVhY3QuRWxlbWVudENvbmZpZzx0eXBlb2YgVmlldz4gJiB7XG4gIC8qKlxuICAgKiBDb250ZW50IG9mIHRoZSBgRGF0YVRhYmxlYC5cbiAgICovXG4gIGNoaWxkcmVuOiBSZWFjdC5Ob2RlLFxuICBzdHlsZT86IGFueSxcbn07XG5cbi8qKlxuICogRGF0YSB0YWJsZXMgYWxsb3cgZGlzcGxheWluZyBzZXRzIG9mIGRhdGEuXG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBzcmM9XCJzY3JlZW5zaG90cy9kYXRhLXRhYmxlLnBuZ1wiIC8+XG4gKiAgICAgPGZpZ2NhcHRpb24+RGF0YSB0YWJsZTwvZmlnY2FwdGlvbj5cbiAqICAgPC9maWd1cmU+XG4gKiA8L2Rpdj5cbiAqXG4gKiAjIyBVc2FnZVxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IERhdGFUYWJsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICogICByZW5kZXIoKSB7XG4gKiAgICAgcmV0dXJuIChcbiAqICAgICAgIDxEYXRhVGFibGU+XG4gKiAgICAgICAgIDxEYXRhVGFibGUuSGVhZGVyPlxuICogICAgICAgICAgIDxEYXRhVGFibGUuVGl0bGU+RGVzc2VydDwvRGF0YVRhYmxlLlRpdGxlPlxuICogICAgICAgICAgIDxEYXRhVGFibGUuVGl0bGUgbnVtZXJpYz5DYWxvcmllczwvRGF0YVRhYmxlLlRpdGxlPlxuICogICAgICAgICAgIDxEYXRhVGFibGUuVGl0bGUgbnVtZXJpYz5GYXQ8L0RhdGFUYWJsZS5UaXRsZT5cbiAqICAgICAgICAgPC9EYXRhVGFibGUuSGVhZGVyPlxuICpcbiAqICAgICAgICAgPERhdGFUYWJsZS5Sb3c+XG4gKiAgICAgICAgICAgPERhdGFUYWJsZS5DZWxsPkZyb3plbiB5b2d1cnQ8L0RhdGFUYWJsZS5DZWxsPlxuICogICAgICAgICAgIDxEYXRhVGFibGUuQ2VsbCBudW1lcmljPjE1OTwvRGF0YVRhYmxlLkNlbGw+XG4gKiAgICAgICAgICAgPERhdGFUYWJsZS5DZWxsIG51bWVyaWM+Ni4wPC9EYXRhVGFibGUuQ2VsbD5cbiAqICAgICAgICAgPC9EYXRhVGFibGUuUm93PlxuICpcbiAqICAgICAgICAgPERhdGFUYWJsZS5Sb3c+XG4gKiAgICAgICAgICAgPERhdGFUYWJsZS5DZWxsPkljZSBjcmVhbSBzYW5kd2ljaDwvRGF0YVRhYmxlLkNlbGw+XG4gKiAgICAgICAgICAgPERhdGFUYWJsZS5DZWxsIG51bWVyaWM+MjM3PC9EYXRhVGFibGUuQ2VsbD5cbiAqICAgICAgICAgICA8RGF0YVRhYmxlLkNlbGwgbnVtZXJpYz44LjA8L0RhdGFUYWJsZS5DZWxsPlxuICogICAgICAgICA8L0RhdGFUYWJsZS5Sb3c+XG4gKlxuICogICAgICAgICA8RGF0YVRhYmxlLlBhZ2luYXRpb25cbiAqICAgICAgICAgICBwYWdlPXsxfVxuICogICAgICAgICAgIG51bWJlck9mUGFnZXM9ezN9XG4gKiAgICAgICAgICAgb25QYWdlQ2hhbmdlPXsocGFnZSkgPT4geyBjb25zb2xlLmxvZyhwYWdlKTsgfX1cbiAqICAgICAgICAgICBsYWJlbD1cIjEtMiBvZiA2XCJcbiAqICAgICAgICAgLz5cbiAqICAgICAgIDwvRGF0YVRhYmxlPlxuICogICAgICk7XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5jbGFzcyBEYXRhVGFibGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8UHJvcHM+IHtcbiAgLy8gQGNvbXBvbmVudCAuL0RhdGFUYWJsZUhlYWRlci5qc1xuICBzdGF0aWMgSGVhZGVyID0gRGF0YVRhYmxlSGVhZGVyO1xuXG4gIC8vIEBjb21wb25lbnQgLi9EYXRhVGFibGVUaXRsZS5qc1xuICBzdGF0aWMgVGl0bGUgPSBEYXRhVGFibGVUaXRsZTtcblxuICAvLyBAY29tcG9uZW50IC4vRGF0YVRhYmxlUm93LmpzXG4gIHN0YXRpYyBSb3cgPSBEYXRhVGFibGVSb3c7XG5cbiAgLy8gQGNvbXBvbmVudCAuL0RhdGFUYWJsZUNlbGwuanNcbiAgc3RhdGljIENlbGwgPSBEYXRhVGFibGVDZWxsO1xuXG4gIC8vIEBjb21wb25lbnQgLi9EYXRhVGFibGVQYWdpbmF0aW9uLmpzXG4gIHN0YXRpYyBQYWdpbmF0aW9uID0gRGF0YVRhYmxlUGFnaW5hdGlvbjtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgc3R5bGUsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFZpZXcgey4uLnJlc3R9IHN0eWxlPXtbc3R5bGVzLmNvbnRhaW5lciwgc3R5bGVdfT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9WaWV3PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICB3aWR0aDogJzEwMCUnLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IERhdGFUYWJsZTtcbiJdfQ==