{"version":3,"sources":["ProgressBar.js"],"names":["ProgressBar","props","progress","color","style","theme","tintColor","colors","primary","trackTintColor","alpha","rgb","string","styles","progressBarHeight","React","Component","StyleSheet","create","paddingVertical"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;IAsCMA,W;;;;;;;;;;6BACK;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,KADlB,eACkBA,KADlB;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAEP,UAAMC,SAAS,GAAGH,KAAK,IAAIE,KAAK,CAACE,MAAN,CAAaC,OAAxC;AACA,UAAMC,cAAc,GAAG,oBAASH,SAAT,EACpBI,KADoB,CACd,IADc,EAEpBC,GAFoB,GAGpBC,MAHoB,EAAvB;AAKA,aACE,oBAAC,6BAAD;AACE,QAAA,QAAQ,EAAEV,QADZ;AAEE,QAAA,iBAAiB,EAAEI,SAFrB;AAGE,QAAA,KAAK,EAAE,CAACO,MAAM,CAACC,iBAAR,EAA2BV,KAA3B,CAHT;AAIE,QAAA,cAAc,EAAEK;AAJlB,QADF;AAQD;;;EAjBuBM,KAAK,CAACC,S;;AAoBhC,IAAMH,MAAM,GAAGI,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,iBAAiB,EAAE;AACjBK,IAAAA,eAAe,EAAE;AADA;AADY,CAAlB,CAAf;;eAMe,wBAAUnB,WAAV,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport setColor from 'color';\nimport ProgressBarComponent from './ProgressBarComponent';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = {|\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress: number,\n  /**\n   * Color of the progress bar.\n   */\n  color?: string,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ProgressBar extends React.Component<Props> {\n  render() {\n    const { progress, color, style, theme } = this.props;\n    const tintColor = color || theme.colors.primary;\n    const trackTintColor = setColor(tintColor)\n      .alpha(0.38)\n      .rgb()\n      .string();\n\n    return (\n      <ProgressBarComponent\n        progress={progress}\n        progressTintColor={tintColor}\n        style={[styles.progressBarHeight, style]}\n        trackTintColor={trackTintColor}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  progressBarHeight: {\n    paddingVertical: 10,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]}