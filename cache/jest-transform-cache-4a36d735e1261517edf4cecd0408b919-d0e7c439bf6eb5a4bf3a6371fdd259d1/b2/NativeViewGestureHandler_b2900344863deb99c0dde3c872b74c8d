635c8c3795e2bac6c0e80d24598885fb
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _createHandler = _interopRequireDefault(require("./createHandler"));

var _GestureHandlerPropTypes = _interopRequireDefault(require("./GestureHandlerPropTypes"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var NativeViewGestureHandler = (0, _createHandler.default)('NativeViewGestureHandler', _objectSpread({}, _GestureHandlerPropTypes.default, {
  shouldActivateOnStart: _propTypes.default.bool,
  disallowInterruption: _propTypes.default.bool
}));
var _default = NativeViewGestureHandler;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlci5qcyJdLCJuYW1lcyI6WyJOYXRpdmVWaWV3R2VzdHVyZUhhbmRsZXIiLCJHZXN0dXJlSGFuZGxlclByb3BUeXBlcyIsInNob3VsZEFjdGl2YXRlT25TdGFydCIsIlByb3BUeXBlcyIsImJvb2wiLCJkaXNhbGxvd0ludGVycnVwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLHdCQUF3QixHQUFHLDRCQUFjLDBCQUFkLG9CQUM1QkMsZ0NBRDRCO0FBSS9CQyxFQUFBQSxxQkFBcUIsRUFBRUMsbUJBQVVDLElBSkY7QUFLL0JDLEVBQUFBLG9CQUFvQixFQUFFRixtQkFBVUM7QUFMRCxHQUFqQztlQVFlSix3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBjcmVhdGVIYW5kbGVyIGZyb20gJy4vY3JlYXRlSGFuZGxlcic7XG5pbXBvcnQgR2VzdHVyZUhhbmRsZXJQcm9wVHlwZXMgZnJvbSAnLi9HZXN0dXJlSGFuZGxlclByb3BUeXBlcyc7XG5cbmNvbnN0IE5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlciA9IGNyZWF0ZUhhbmRsZXIoJ05hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlcicsIHtcbiAgLi4uR2VzdHVyZUhhbmRsZXJQcm9wVHlwZXMsXG5cbiAgLy8gSWYgY2hhbmdlZCwgYWRkIGNoYW5nZXMgdG8gTkFUSVZFX1dSQVBQRVJfUFJPUFNfRklMVEVSIGFzIHdlbGxcbiAgc2hvdWxkQWN0aXZhdGVPblN0YXJ0OiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzYWxsb3dJbnRlcnJ1cHRpb246IFByb3BUeXBlcy5ib29sLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IE5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlcjtcbiJdfQ==