{"version":3,"sources":["AppbarBackAction.js"],"names":["AppbarBackAction","props","Platform","OS","size","color","styles","wrapper","width","height","transform","scaleX","I18nManager","isRTL","require","icon","tintColor","source","direction","React","Component","displayName","defaultProps","accessibilityLabel","StyleSheet","create","alignItems","justifyContent","resizeMode"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AAEA;;IA6BMA,gB;;;;;;;;;;6BAOK;AACP,aACE,oBAAC,qBAAD,6BACM,KAAKC,KADX;AAEE,QAAA,IAAI,EACFC,sBAASC,EAAT,KAAgB,KAAhB,GACI;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,cAASC,KAAT,QAASA,KAAT;AAAA,iBACE,oBAAC,iBAAD;AACE,YAAA,KAAK,EAAE,CACLC,MAAM,CAACC,OADF,EAEL;AACEC,cAAAA,KAAK,EAAEJ,IADT;AAEEK,cAAAA,MAAM,EAAEL,IAFV;AAGEM,cAAAA,SAAS,EAAE,CAAC;AAAEC,gBAAAA,MAAM,EAAEC,yBAAYC,KAAZ,GAAoB,CAAC,CAArB,GAAyB;AAAnC,eAAD;AAHb,aAFK;AADT,aAUE,oBAAC,kBAAD;AACE,YAAA,MAAM,EAAEC,OAAO,iCADjB;AAEE,YAAA,KAAK,EAAE,CAACR,MAAM,CAACS,IAAR,EAAc;AAAEC,cAAAA,SAAS,EAAEX;AAAb,aAAd;AAFT,YAVF,CADF;AAAA,SADJ,GAkBI;AAAEY,UAAAA,MAAM,EAAE,YAAV;AAAwBC,UAAAA,SAAS,EAAE;AAAnC;AArBR,SADF;AA0BD;;;EAlC4BC,KAAK,CAACC,S;;AAA/BpB,gB,CACGqB,W,GAAc,mB;AADjBrB,gB,CAGGsB,Y,GAAe;AACpBC,EAAAA,kBAAkB,EAAE;AADA,C;;AAkCxB,IAAMjB,MAAM,GAAGkB,wBAAWC,MAAX,CAAkB;AAC/BlB,EAAAA,OAAO,EAAE;AACPmB,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE;AAFT,GADsB;AAK/BZ,EAAAA,IAAI,EAAE;AACJN,IAAAA,MAAM,EAAE,EADJ;AAEJD,IAAAA,KAAK,EAAE,EAFH;AAGJoB,IAAAA,UAAU,EAAE;AAHR;AALyB,CAAlB,CAAf;;eAYe5B,gB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, Image, I18nManager, StyleSheet, Platform } from 'react-native';\n\nimport AppbarAction from './AppbarAction';\n\ntype Props = React.ElementConfig<typeof AppbarAction> & {|\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string,\n  /**\n   * Optional icon size.\n   */\n  size?: number,\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean,\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n|};\n\n/**\n * A component used to display a back button in the appbar.\n */\nclass AppbarBackAction extends React.Component<Props> {\n  static displayName = 'Appbar.BackAction';\n\n  static defaultProps = {\n    accessibilityLabel: 'Back',\n  };\n\n  render() {\n    return (\n      <AppbarAction\n        {...this.props}\n        icon={\n          Platform.OS === 'ios'\n            ? ({ size, color }) => (\n                <View\n                  style={[\n                    styles.wrapper,\n                    {\n                      width: size,\n                      height: size,\n                      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n                    },\n                  ]}\n                >\n                  <Image\n                    source={require('../../assets/back-chevron.png')}\n                    style={[styles.icon, { tintColor: color }]}\n                  />\n                </View>\n              )\n            : { source: 'arrow-back', direction: 'auto' }\n        }\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain',\n  },\n});\n\nexport default AppbarBackAction;\n"]}