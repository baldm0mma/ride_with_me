{"version":3,"sources":["AppbarAction.js"],"names":["AppbarAction","props","color","iconColor","black","alpha","rgb","string","icon","disabled","onPress","accessibilityLabel","rest","React","Component","displayName","defaultProps","size"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;IAkCqBA,Y;;;;;;;;;;6BAOV;AAAA,wBAWH,KAAKC,KAXF;AAAA,0CAELC,KAFK;AAAA,UAEEC,SAFF,kCAEc,oBAAMC,aAAN,EAChBC,KADgB,CACV,IADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAFd;AAAA,UAMLC,IANK,eAMLA,IANK;AAAA,UAOLC,QAPK,eAOLA,QAPK;AAAA,UAQLC,OARK,eAQLA,OARK;AAAA,UASLC,kBATK,eASLA,kBATK;AAAA,UAUFC,IAVE;AAaP,aACE,oBAAC,mBAAD;AACE,QAAA,OAAO,EAAEF,OADX;AAEE,QAAA,KAAK,EAAEP,SAFT;AAGE,QAAA,IAAI,EAAEK,IAHR;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,kBAAkB,EAAEE,kBALtB;AAME,QAAA,QAAQ;AANV,SAOMC,IAPN,EADF;AAWD;;;EA/BuCC,KAAK,CAACC,S;;;AAA3Bd,Y,CACZe,W,GAAc,e;AADFf,Y,CAGZgB,Y,GAAe;AACpBC,EAAAA,IAAI,EAAE;AADc,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport color from 'color';\nimport { black } from '../../styles/colors';\nimport IconButton from '../IconButton';\nimport type { IconSource } from '../Icon';\n\ntype Props = React.ElementConfig<typeof IconButton> & {|\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string,\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource,\n  /**\n   * Optional icon size.\n   */\n  size?: number,\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean,\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n|};\n\n/**\n * A component used to display an action item in the appbar.\n */\nexport default class AppbarAction extends React.Component<Props> {\n  static displayName = 'Appbar.Action';\n\n  static defaultProps = {\n    size: 24,\n  };\n\n  render() {\n    const {\n      color: iconColor = color(black)\n        .alpha(0.54)\n        .rgb()\n        .string(),\n      icon,\n      disabled,\n      onPress,\n      accessibilityLabel,\n      ...rest\n    } = this.props;\n\n    return (\n      <IconButton\n        onPress={onPress}\n        color={iconColor}\n        icon={icon}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        animated\n        {...rest}\n      />\n    );\n  }\n}\n"]}