{"version":3,"sources":["DataTablePagination.js"],"names":["DataTablePagination","props","label","page","numberOfPages","onPageChange","style","theme","rest","labelColor","colors","text","alpha","rgb","string","styles","container","color","React","Component","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","fontSize","marginRight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;IA2BMA,mB;;;;;;;;;;6BAGK;AAAA,wBASH,KAAKC,KATF;AAAA,UAELC,KAFK,eAELA,KAFK;AAAA,UAGLC,IAHK,eAGLA,IAHK;AAAA,UAILC,aAJK,eAILA,aAJK;AAAA,UAKLC,YALK,eAKLA,YALK;AAAA,UAMLC,KANK,eAMLA,KANK;AAAA,UAOLC,KAPK,eAOLA,KAPK;AAAA,UAQFC,IARE;AAUP,UAAMC,UAAU,GAAG,oBAAMF,KAAK,CAACG,MAAN,CAAaC,IAAnB,EAChBC,KADgB,CACV,GADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAAnB;AAKA,aACE,oBAAC,iBAAD,6BAAUN,IAAV;AAAgB,QAAA,KAAK,EAAE,CAACO,MAAM,CAACC,SAAR,EAAmBV,KAAnB;AAAvB,UACE,oBAAC,aAAD;AAAM,QAAA,KAAK,EAAE,CAACS,MAAM,CAACb,KAAR,EAAe;AAAEe,UAAAA,KAAK,EAAER;AAAT,SAAf,CAAb;AAAoD,QAAA,aAAa,EAAE;AAAnE,SACGP,KADH,CADF,EAIE,oBAAC,mBAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,KAAK,EAAEK,KAAK,CAACG,MAAN,CAAaC,IAFtB;AAGE,QAAA,QAAQ,EAAER,IAAI,KAAK,CAHrB;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAME,YAAY,CAACF,IAAI,GAAG,CAAR,CAAlB;AAAA;AAJX,QAJF,EAUE,oBAAC,mBAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,KAAK,EAAEI,KAAK,CAACG,MAAN,CAAaC,IAFtB;AAGE,QAAA,QAAQ,EAAER,IAAI,KAAKC,aAAa,GAAG,CAHrC;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMC,YAAY,CAACF,IAAI,GAAG,CAAR,CAAlB;AAAA;AAJX,QAVF,CADF;AAmBD;;;EArC+Be,KAAK,CAACC,S;;AAAlCnB,mB,CACGoB,W,GAAc,sB;;AAuCvB,IAAML,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,cAAc,EAAE,UADP;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,WAAW,EAAE;AAJJ,GADoB;AAQ/BxB,EAAAA,KAAK,EAAE;AACLyB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,WAAW,EAAE;AAFR;AARwB,CAAlB,CAAf;;eAce,wBAAU5B,mBAAV,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof View> & {|\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number,\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number,\n  /**\n   * Label text to display\n   */\n  label?: React.Node,\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: number => void,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\nclass DataTablePagination extends React.Component<Props> {\n  static displayName = 'DataTable.Pagination';\n\n  render() {\n    const {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const labelColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n          {label}\n        </Text>\n        <IconButton\n          icon=\"chevron-left\"\n          color={theme.colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(page - 1)}\n        />\n        <IconButton\n          icon=\"chevron-right\"\n          color={theme.colors.text}\n          disabled={page === numberOfPages - 1}\n          onPress={() => onPageChange(page + 1)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n"]}