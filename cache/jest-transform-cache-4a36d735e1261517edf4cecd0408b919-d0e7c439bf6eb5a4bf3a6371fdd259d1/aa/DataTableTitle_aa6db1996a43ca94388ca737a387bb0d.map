{"version":3,"sources":["DataTableTitle.js"],"names":["DataTableTitle","state","spinAnim","Animated","Value","props","sortDirection","prevProps","timing","toValue","duration","useNativeDriver","start","numeric","children","onPress","theme","style","numberOfLines","rest","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","styles","transform","rotate","container","right","cell","sorted","color","React","Component","displayName","defaultProps","StyleSheet","create","flex","flexDirection","alignContent","paddingVertical","justifyContent","height","lineHeight","fontSize","fontWeight","alignItems","marginLeft"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport color from 'color';\nimport Icon from '../Icon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.Node,\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean,\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending',\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\ntype State = {\n  spinAnim: Animated.Value,\n};\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <Icon source=\"arrow-downward\" size={16} color={theme.colors.text} />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n"]}