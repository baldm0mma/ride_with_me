{"version":3,"sources":["Swipeable.js"],"names":["DRAG_TOSS","Swipeable","props","_updateAnimatedEvent","state","friction","overshootFriction","useNativeAnimations","dragX","rowTranslation","leftWidth","rowWidth","rightOffset","rightWidth","Math","max","overshootLeft","overshootRight","transX","Animated","add","interpolate","inputRange","outputRange","_transX","_showLeftAction","Value","_leftActionTranslate","Number","MIN_VALUE","extrapolate","_showRightAction","_rightActionTranslate","_onTapHandlerStateChange","nativeEvent","oldState","State","ACTIVE","close","_onHandlerStateChange","_handleRelease","velocityX","translationX","rowState","leftThreshold","rightThreshold","startOffsetX","_currentOffset","toValue","_animateRow","fromValue","setValue","setState","sign","spring","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","useNativeDriver","animationOptions","start","finished","onSwipeableLeftOpen","onSwipeableRightOpen","onSwipeableClose","onSwipeableOpen","onSwipeableLeftWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","onSwipeableWillOpen","_onRowLayout","layout","width","openLeft","openRight","undefined","_onGestureEvent","event","children","renderLeftActions","renderRightActions","left","styles","leftActions","transform","translateX","x","right","rightActions","container","containerStyle","childrenContainerStyle","Component","defaultProps","StyleSheet","create","overflow","absoluteFillObject","flexDirection"],"mappings":"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","sourcesContent":["// @flow\n\n// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us\n// to move faster and fix possible issues quicker\n\nimport React, { Component } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nexport type PropType = {\n  children: any,\n  friction: number,\n  leftThreshold?: number,\n  rightThreshold?: number,\n  overshootLeft?: boolean,\n  overshootRight?: boolean,\n  overshootFriction: number,\n  onSwipeableLeftOpen?: Function,\n  onSwipeableRightOpen?: Function,\n  onSwipeableOpen?: Function,\n  onSwipeableClose?: Function,\n  onSwipeableLeftWillOpen?: Function,\n  onSwipeableRightWillOpen?: Function,\n  onSwipeableWillOpen?: Function,\n  onSwipeableWillClose?: Function,\n  renderLeftActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  renderRightActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  useNativeAnimations: boolean,\n  animationOptions?: Object,\n  containerStyle?: Object,\n  childrenContainerStyle?: Object,\n};\ntype StateType = {\n  dragX: Animated.Value,\n  rowTranslation: Animated.Value,\n  rowState: number,\n  leftWidth: number | typeof undefined,\n  rightOffset: number | typeof undefined,\n  rowWidth: number | typeof undefined,\n};\n\nexport default class Swipeable extends Component<PropType, StateType> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n  _onGestureEvent: ?Animated.Event;\n  _transX: ?Animated.Interpolation;\n  _showLeftAction: ?Animated.Interpolation | ?Animated.Value;\n  _leftActionTranslate: ?Animated.Interpolation;\n  _showRightAction: ?Animated.Interpolation | ?Animated.Value;\n  _rightActionTranslate: ?Animated.Interpolation;\n\n  constructor(props: PropType) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this._updateAnimatedEvent(props, this.state);\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    const { friction, overshootFriction, useNativeAnimations } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [\n        -rightWidth - (overshootRight ? 1 : overshootFriction),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 : overshootFriction),\n      ],\n      outputRange: [\n        -rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0),\n      ],\n    });\n    this._transX = transX;\n    this._showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this._leftActionTranslate = this._showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this._showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this._rightActionTranslate = this._showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  _onHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { velocityX, translationX: dragX } = nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this._currentOffset() + dragX / friction;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this._animateRow(startOffsetX, toValue, velocityX / friction);\n  };\n\n  _animateRow = (fromValue, toValue, velocityX) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose && this.props.onSwipeableClose();\n        } else {\n          this.props.onSwipeableOpen && this.props.onSwipeableOpen();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose && this.props.onSwipeableWillClose();\n    } else {\n      this.props.onSwipeableWillOpen && this.props.onSwipeableWillOpen();\n    }\n  };\n\n  _onRowLayout = ({ nativeEvent }) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  _currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this._animateRow(this._currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this._animateRow(this._currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this._animateRow(this._currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          { transform: [{ translateX: this._leftActionTranslate }] },\n        ]}>\n        {renderLeftActions(this._showLeftAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this._rightActionTranslate }] },\n        ]}>\n        {renderRightActions(this._showRightAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        {...this.props}\n        minDeltaX={10}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}>\n        <Animated.View\n          onLayout={this._onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this._onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this._transX }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'row-reverse',\n  },\n});\n"]}