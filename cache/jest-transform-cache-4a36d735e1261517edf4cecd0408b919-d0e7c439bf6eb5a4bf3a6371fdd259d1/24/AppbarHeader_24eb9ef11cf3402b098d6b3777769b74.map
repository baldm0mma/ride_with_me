{"version":3,"sources":["AppbarHeader.js"],"names":["AppbarHeader","props","statusBarHeight","APPROX_STATUSBAR_HEIGHT","style","rest","colors","theme","StyleSheet","flatten","height","DEFAULT_APPBAR_HEIGHT","elevation","zIndex","backgroundColor","primary","restStyle","Wrapper","View","SafeAreaView","marginTop","styles","appbar","React","Component","displayName","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;IAuEMA,Y;;;;;;;;;;6BAGK;AAAA,wBAMH,KAAKC,KANF;AAAA,8CAGLC,eAHK;AAAA,UAGLA,eAHK,sCAGaC,kCAHb;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKFC,IALE;AAAA,UAQCC,MARD,GAQYD,IAAI,CAACE,KARjB,CAQCD,MARD;;AAAA,iBAeHE,wBAAWC,OAAX,CAAmBL,KAAnB,KAA6B,EAf1B;AAAA,6BAULM,MAVK;AAAA,UAULA,MAVK,4BAUIC,6BAVJ;AAAA,gCAWLC,SAXK;AAAA,UAWLA,SAXK,+BAWO,CAXP;AAAA,6BAYLC,MAZK;AAAA,UAYLA,MAZK,4BAYI,CAZJ;AAAA,sCAaLC,eAbK;AAAA,UAaLA,eAbK,qCAaaR,MAAM,CAACS,OAbpB;AAAA,UAcFC,SAdE;;AAkBP,UAAMC,OAAO,GACX,OAAO,KAAKhB,KAAL,CAAWC,eAAlB,KAAsC,QAAtC,GAAiDgB,iBAAjD,GAAwDC,yBAD1D;AAGA,aACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE,CAAC;AAAEL,UAAAA,eAAe,EAAfA,eAAF;AAAmBD,UAAAA,MAAM,EAANA;AAAnB,SAAD,EAA8BD,SAAS,IAAI,qBAAOA,SAAP,CAA3C;AADT,SAIE,oBAAC,eAAD;AACE,QAAA,KAAK,EAAE,CACL;AAAEF,UAAAA,MAAM,EAANA,MAAF;AAAUI,UAAAA,eAAe,EAAfA,eAAV;AAA2BM,UAAAA,SAAS,EAAElB;AAAtC,SADK,EAELmB,MAAM,CAACC,MAFF,EAGLN,SAHK;AADT,SAMMX,IANN,EAJF,CADF;AAeD;;;EAvCwBkB,KAAK,CAACC,S;;AAA3BxB,Y,CACGyB,W,GAAc,e;;AAyCvB,IAAMJ,MAAM,GAAGb,wBAAWkB,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACNV,IAAAA,SAAS,EAAE;AADL;AADuB,CAAlB,CAAf;;eAMe,wBAAUZ,YAAV,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, SafeAreaView, StyleSheet } from 'react-native';\n\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof Appbar> & {|\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean,\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number,\n  /**\n   * Content of the header.\n   */\n  children: React.Node,\n  /**\n   * @optional\n   */\n  theme: Theme,\n  style?: any,\n|};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   _goBack = () => console.log('Went back');\n *\n *   _onSearch = () => console.log('Searching');\n *\n *   _onMore = () => console.log('Shown more');\n *\n *   render() {\n *     return (\n *       <Appbar.Header>\n *         <Appbar.BackAction\n *           onPress={this._goBack}\n *         />\n *         <Appbar.Content\n *           title=\"Title\"\n *           subtitle=\"Subtitle\"\n *         />\n *         <Appbar.Action icon=\"search\" onPress={this._onSearch} />\n *         <Appbar.Action icon=\"more-vert\" onPress={this._onMore} />\n *       </Appbar.Header>\n *     );\n *   }\n * }\n * ```\n */\nclass AppbarHeader extends React.Component<Props> {\n  static displayName = 'Appbar.Header';\n\n  render() {\n    const {\n      // Don't use default props since we check it to know whether we should use SafeAreaView\n      statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n      style,\n      ...rest\n    } = this.props;\n\n    const { colors } = rest.theme;\n    const {\n      height = DEFAULT_APPBAR_HEIGHT,\n      elevation = 4,\n      zIndex = 0,\n      backgroundColor = colors.primary,\n      ...restStyle\n    } = StyleSheet.flatten(style) || {};\n\n    // Let the user override the behaviour\n    const Wrapper =\n      typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n\n    return (\n      <Wrapper\n        style={[{ backgroundColor, zIndex }, elevation && shadow(elevation)]}\n      >\n        {/* $FlowFixMe: There seems to be conflict between Appbar's props and Header's props */}\n        <Appbar\n          style={[\n            { height, backgroundColor, marginTop: statusBarHeight },\n            styles.appbar,\n            restStyle,\n          ]}\n          {...rest}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n"]}