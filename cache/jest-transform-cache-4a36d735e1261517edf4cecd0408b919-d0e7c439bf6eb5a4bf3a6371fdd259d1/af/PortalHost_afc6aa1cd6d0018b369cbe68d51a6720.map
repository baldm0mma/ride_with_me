{"version":3,"sources":["PortalHost.js"],"names":["PortalContext","PortalHost","_setManager","manager","_manager","_mount","children","key","_nextKey","mount","_queue","push","type","_update","update","op","index","findIndex","o","_unmount","unmount","queue","length","action","pop","styles","container","props","React","Component","displayName","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport PortalManager from './PortalManager';\nimport createReactContext, { type Context } from 'create-react-context';\n\ntype Props = {|\n  children: React.Node,\n|};\n\ntype Operation =\n  | { type: 'mount', key: number, children: React.Node }\n  | { type: 'update', key: number, children: React.Node }\n  | { type: 'unmount', key: number };\n\nexport type PortalMethods = {\n  mount: (children: React.Node) => number,\n  update: (key: number, children: React.Node) => void,\n  unmount: (key: number) => void,\n};\n\nexport const PortalContext: Context<PortalMethods> = createReactContext(\n  (null: any)\n);\n\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal.Host>\n *         <Text>Content of the app</Text>\n *       </Portal.Host>\n *     );\n *   }\n * }\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nexport default class PortalHost extends React.Component<Props> {\n  static displayName = 'Portal.Host';\n\n  componentDidMount() {\n    const manager = this._manager;\n    const queue = this._queue;\n\n    while (queue.length && manager) {\n      const action = queue.pop();\n\n      // eslint-disable-next-line default-case\n      switch (action.type) {\n        case 'mount':\n          manager.mount(action.key, action.children);\n          break;\n        case 'update':\n          manager.update(action.key, action.children);\n          break;\n        case 'unmount':\n          manager.unmount(action.key);\n          break;\n      }\n    }\n  }\n\n  _setManager = (manager: ?Object) => {\n    this._manager = manager;\n  };\n\n  _mount = (children: React.Node) => {\n    const key = this._nextKey++;\n\n    if (this._manager) {\n      this._manager.mount(key, children);\n    } else {\n      this._queue.push({ type: 'mount', key, children });\n    }\n\n    return key;\n  };\n\n  _update = (key: number, children: React.Node) => {\n    if (this._manager) {\n      this._manager.update(key, children);\n    } else {\n      const op = { type: 'mount', key, children };\n      const index = this._queue.findIndex(\n        o => o.type === 'mount' || (o.type === 'update' && o.key === key)\n      );\n\n      if (index > -1) {\n        /* $FlowFixMe */\n        this._queue[index] = op;\n      } else {\n        this._queue.push(op);\n      }\n    }\n  };\n\n  _unmount = (key: number) => {\n    if (this._manager) {\n      this._manager.unmount(key);\n    } else {\n      this._queue.push({ type: 'unmount', key });\n    }\n  };\n\n  _nextKey = 0;\n  _queue: Operation[] = [];\n  _manager: ?PortalManager;\n\n  render() {\n    return (\n      <PortalContext.Provider\n        value={{\n          mount: this._mount,\n          update: this._update,\n          unmount: this._unmount,\n        }}\n      >\n        {/* Need collapsable=false here to clip the elevations, otherwise they appear above Portal components */}\n        <View style={styles.container} collapsable={false}>\n          {this.props.children}\n        </View>\n        <PortalManager ref={this._setManager} />\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}