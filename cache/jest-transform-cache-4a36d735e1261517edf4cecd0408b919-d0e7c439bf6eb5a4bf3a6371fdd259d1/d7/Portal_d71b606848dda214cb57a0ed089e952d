e7a4117817b09afbc86fd08b89054fcb
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _PortalConsumer = _interopRequireDefault(require("./PortalConsumer"));

var _PortalHost = _interopRequireWildcard(require("./PortalHost"));

var _theming = require("../../core/theming");

var Portal = function (_React$Component) {
  (0, _inherits2.default)(Portal, _React$Component);

  function Portal() {
    (0, _classCallCheck2.default)(this, Portal);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Portal).apply(this, arguments));
  }

  (0, _createClass2.default)(Portal, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          theme = _this$props.theme;
      return React.createElement(_PortalHost.PortalContext.Consumer, null, function (manager) {
        return React.createElement(_PortalConsumer.default, {
          manager: manager
        }, React.createElement(_theming.ThemeProvider, {
          theme: theme
        }, children));
      });
    }
  }]);
  return Portal;
}(React.Component);

Portal.Host = _PortalHost.default;

var _default = (0, _theming.withTheme)(Portal);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvcnRhbC5qcyJdLCJuYW1lcyI6WyJQb3J0YWwiLCJwcm9wcyIsImNoaWxkcmVuIiwidGhlbWUiLCJtYW5hZ2VyIiwiUmVhY3QiLCJDb21wb25lbnQiLCJIb3N0IiwiUG9ydGFsSG9zdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOztJQW1DTUEsTTs7Ozs7Ozs7Ozs2QkFJSztBQUFBLHdCQUNxQixLQUFLQyxLQUQxQjtBQUFBLFVBQ0NDLFFBREQsZUFDQ0EsUUFERDtBQUFBLFVBQ1dDLEtBRFgsZUFDV0EsS0FEWDtBQUdQLGFBQ0Usb0JBQUMseUJBQUQsQ0FBZSxRQUFmLFFBQ0csVUFBQUMsT0FBTztBQUFBLGVBQ04sb0JBQUMsdUJBQUQ7QUFBZ0IsVUFBQSxPQUFPLEVBQUVBO0FBQXpCLFdBQ0Usb0JBQUMsc0JBQUQ7QUFBZSxVQUFBLEtBQUssRUFBRUQ7QUFBdEIsV0FBOEJELFFBQTlCLENBREYsQ0FETTtBQUFBLE9BRFYsQ0FERjtBQVNEOzs7RUFoQmtCRyxLQUFLLENBQUNDLFM7O0FBQXJCTixNLENBRUdPLEksR0FBT0MsbUI7O2VBaUJELHdCQUFVUixNQUFWLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuLyogZXNsaW50LWRpc2FibGUgcmVhY3Qvbm8tdW51c2VkLXByb3AtdHlwZXMgKi9cblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFBvcnRhbENvbnN1bWVyIGZyb20gJy4vUG9ydGFsQ29uc3VtZXInO1xuaW1wb3J0IFBvcnRhbEhvc3QsIHsgUG9ydGFsQ29udGV4dCB9IGZyb20gJy4vUG9ydGFsSG9zdCc7XG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyLCB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi9jb3JlL3RoZW1pbmcnO1xuaW1wb3J0IHR5cGUgeyBUaGVtZSB9IGZyb20gJy4uLy4uL3R5cGVzJztcblxudHlwZSBQcm9wcyA9IHt8XG4gIC8qKlxuICAgKiBDb250ZW50IG9mIHRoZSBgUG9ydGFsYC5cbiAgICovXG4gIGNoaWxkcmVuOiBSZWFjdC5Ob2RlLFxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICB0aGVtZTogVGhlbWUsXG58fTtcblxuLyoqXG4gKiBQb3J0YWwgYWxsb3dzIHRvIHJlbmRlciBhIGNvbXBvbmVudCBhdCBhIGRpZmZlcmVudCBwbGFjZSBpbiB0aGUgcGFyZW50IHRyZWUuXG4gKiBZb3UgY2FuIHVzZSBpdCB0byByZW5kZXIgY29udGVudCB3aGljaCBzaG91bGQgYXBwZWFyIGFib3ZlIG90aGVyIGVsZW1lbnRzLCBzaW1pbGFyIHRvIGBNb2RhbGAuXG4gKiBJdCByZXF1aXJlcyBhIFtgUG9ydGFsLkhvc3RgXShwb3J0YWwtaG9zdC5odG1sKSBjb21wb25lbnQgdG8gYmUgcmVuZGVyZWQgc29tZXdoZXJlIGluIHRoZSBwYXJlbnQgdHJlZS5cbiAqXG4gKiAjIyBVc2FnZVxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IFBvcnRhbCwgVGV4dCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICogICByZW5kZXIoKSB7XG4gKiAgICAgcmV0dXJuIChcbiAqICAgICAgIDxQb3J0YWw+XG4gKiAgICAgICAgIDxUZXh0PlRoaXMgaXMgcmVuZGVyZWQgYXQgYSBkaWZmZXJlbnQgcGxhY2U8L1RleHQ+XG4gKiAgICAgICA8L1BvcnRhbD5cbiAqICAgICApO1xuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuY2xhc3MgUG9ydGFsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzPiB7XG4gIC8vIEBjb21wb25lbnQgLi9Qb3J0YWxIb3N0LmpzXG4gIHN0YXRpYyBIb3N0ID0gUG9ydGFsSG9zdDtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgdGhlbWUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFBvcnRhbENvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHttYW5hZ2VyID0+IChcbiAgICAgICAgICA8UG9ydGFsQ29uc3VtZXIgbWFuYWdlcj17bWFuYWdlcn0+XG4gICAgICAgICAgICA8VGhlbWVQcm92aWRlciB0aGVtZT17dGhlbWV9PntjaGlsZHJlbn08L1RoZW1lUHJvdmlkZXI+XG4gICAgICAgICAgPC9Qb3J0YWxDb25zdW1lcj5cbiAgICAgICAgKX1cbiAgICAgIDwvUG9ydGFsQ29udGV4dC5Db25zdW1lcj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShQb3J0YWwpO1xuIl19