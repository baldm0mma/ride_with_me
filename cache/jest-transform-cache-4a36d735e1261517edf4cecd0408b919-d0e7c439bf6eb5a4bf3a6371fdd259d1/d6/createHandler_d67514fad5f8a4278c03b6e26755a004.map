{"version":3,"sources":["createHandler.js"],"names":["findNodeHandle","node","Platform","OS","NativeModules","UIManager","customGHEventsConfig","onGestureHandlerEvent","registrationName","onGestureHandlerStateChange","genericDirectEventTypes","setJSResponder","oldSetJSResponder","clearJSResponder","oldClearJSResponder","getConstants","oldGetConstants","tag","blockNativeResponder","RNGestureHandlerModule","handleSetJSResponder","handleClearJSResponder","constants","handlerTag","handlerIDToTag","isConfigParam","param","name","undefined","Object","filterConfig","props","validProps","defaults","res","keys","forEach","key","value","transformIntoHandlerTags","top","left","bottom","right","handlerIDs","Array","isArray","map","current","filter","handle","handlerID","_handlerTag","hasUnresolvedRefs","extract","refs","some","r","stateToPropMappings","State","BEGAN","FAILED","CANCELLED","ACTIVE","END","createHandler","handlerName","propTypes","config","transformProps","customNativeProps","Handler","_onGestureHandlerEvent","event","nativeEvent","onGestureEvent","_onGestureHandlerStateChange","onHandlerStateChange","stateEventName","state","_refHandler","_viewNode","child","React","Children","only","children","ref","_createGestureHandler","newConfig","_config","createGestureHandler","_attachGestureHandler","newViewTag","_viewTag","attachGestureHandler","_updateGestureHandler","updateGestureHandler","id","Error","dropGestureHandler","_updateEnqueued","clearImmediate","setImmediate","_update","constructor","viewTag","updates","mergedProps","gestureEventHandler","gestureStateEventHandler","grandChildren","Touchable","TOUCH_TARGET_DEBUG","type","displayName","toArray","push","renderDebugView","color","hitSlop","cloneElement","collapsable","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  findNodeHandle as findNodeHandleRN,\n  NativeModules,\n  Touchable,\n  Platform,\n} from 'react-native';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport RNGestureHandlerModule from './RNGestureHandlerModule';\nimport State from './State';\n\nfunction findNodeHandle(node) {\n  if (Platform.OS === 'web') return node;\n  return findNodeHandleRN(node);\n}\n\nconst { UIManager = {} } = NativeModules;\n\nconst customGHEventsConfig = {\n  onGestureHandlerEvent: { registrationName: 'onGestureHandlerEvent' },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange',\n  },\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManager.genericDirectEventTypes = {\n  ...UIManager.genericDirectEventTypes,\n  ...customGHEventsConfig,\n};\n\n// Wrap JS responder calls and notify gesture handler manager\nconst {\n  setJSResponder: oldSetJSResponder = () => {},\n  clearJSResponder: oldClearJSResponder = () => {},\n  getConstants: oldGetConstants = () => ({}),\n} = UIManager;\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n// We also add GH specific events to the constants object returned by\n// UIManager.getConstants to make it work with the newest version of RN\nUIManager.getConstants = () => {\n  const constants = oldGetConstants();\n  return {\n    ...constants,\n    genericDirectEventTypes: {\n      ...constants.genericDirectEventTypes,\n      ...customGHEventsConfig,\n    },\n  };\n};\n\nlet handlerTag = 1;\nconst handlerIDToTag = {};\n\nfunction isConfigParam(param, name) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) || !('__isNative' in param)) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nfunction filterConfig(props, validProps, defaults = {}) {\n  const res = { ...defaults };\n  Object.keys(validProps).forEach(key => {\n    const value = props[key];\n    if (isConfigParam(value, key)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  if (Platform.OS === 'web') {\n    return handlerIDs.map(({ current }) => current).filter(handle => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      handlerID =>\n        handlerIDToTag[handlerID] ||\n        (handlerID.current && handlerID.current._handlerTag) ||\n        -1\n    )\n    .filter(handlerTag => handlerTag > 0);\n}\n\nfunction hasUnresolvedRefs(props) {\n  const extract = refs => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(r => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nconst stateToPropMappings = {\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded',\n};\n\nexport default function createHandler(\n  handlerName,\n  propTypes = {},\n  config = {},\n  transformProps,\n  customNativeProps = {}\n) {\n  class Handler extends React.Component {\n    static displayName = handlerName;\n\n    static propTypes = propTypes;\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _onGestureHandlerEvent = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onGestureEvent && this.props.onGestureEvent(event);\n      } else {\n        this.props.onGestureHandlerEvent &&\n          this.props.onGestureHandlerEvent(event);\n      }\n    };\n\n    _onGestureHandlerStateChange = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onHandlerStateChange &&\n          this.props.onHandlerStateChange(event);\n\n        const stateEventName = stateToPropMappings[event.nativeEvent.state];\n        if (typeof this.props[stateEventName] === 'function') {\n          this.props[stateEventName](event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange &&\n          this.props.onGestureHandlerStateChange(event);\n      }\n    };\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      const { ref } = child;\n      if (ref !== null) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      }\n    };\n\n    _createGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.createGestureHandler(\n        handlerName,\n        this._handlerTag,\n        newConfig\n      );\n    };\n\n    _attachGestureHandler = newViewTag => {\n      this._viewTag = newViewTag;\n\n      RNGestureHandlerModule.attachGestureHandler(this._handlerTag, newViewTag);\n    };\n\n    _updateGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.updateGestureHandler(this._handlerTag, newConfig);\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this._updateEnqueued) {\n        clearImmediate(this._updateEnqueued);\n      }\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      if (hasUnresolvedRefs(this.props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // setImmediate. This makes it so _update function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        this._updateEnqueued = setImmediate(() => {\n          this._updateEnqueued = null;\n          this._update();\n        });\n      }\n\n      this._createGestureHandler(\n        filterConfig(\n          transformProps ? transformProps(this.props) : this.props,\n          { ...this.constructor.propTypes, ...customNativeProps },\n          config\n        )\n      );\n      this._attachGestureHandler(findNodeHandle(this._viewNode));\n    }\n\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._attachGestureHandler(viewTag);\n      }\n      this._update();\n    }\n\n    _update() {\n      const newConfig = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._updateGestureHandler(newConfig);\n      }\n    }\n\n    setNativeProps(updates) {\n      const mergedProps = { ...this.props, ...updates };\n      const newConfig = filterConfig(\n        transformProps ? transformProps(mergedProps) : mergedProps,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      this._updateGestureHandler(newConfig);\n    }\n\n    render() {\n      let gestureEventHandler = this._onGestureHandlerEvent;\n      const { onGestureEvent, onGestureHandlerEvent } = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      let gestureStateEventHandler = this._onGestureHandlerStateChange;\n      const { onHandlerStateChange, onGestureHandlerStateChange } = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureStateEventHandler = this.props.onHandlerStateChange;\n      } else {\n        if (\n          onGestureHandlerStateChange &&\n          typeof onGestureHandlerStateChange !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      const child = React.Children.only(this.props.children);\n      let grandChildren = child.props.children;\n      if (\n        Touchable.TOUCH_TARGET_DEBUG &&\n        child.type &&\n        (child.type === 'RNGestureHandlerButton' ||\n          child.type.name === 'View' ||\n          child.type.displayName === 'View')\n      ) {\n        grandChildren = React.Children.toArray(grandChildren);\n        grandChildren.push(\n          Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop,\n          })\n        );\n      }\n      return React.cloneElement(\n        child,\n        {\n          ref: this._refHandler,\n          collapsable: false,\n          onGestureHandlerEvent: gestureEventHandler,\n          onGestureHandlerStateChange: gestureStateEventHandler,\n        },\n        grandChildren\n      );\n    }\n  }\n  return Handler;\n}\n"]}